{"version":3,"sources":["scripts/decorators.ts"],"names":[],"mappings":"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","file":"decorators.js","sourcesContent":["import { $, $$, addClass, createElement } from './__constants';\n\nconst decorateButtons = (block: HTMLElement) => {\n  const btnPattern = /\\[--button--\\](.*?)\\[\\/--button--\\]/gs;\n  const stylePattern = /\\{--(.*?)--\\}/s;\n\n  const btnProps: any = {\n    style: 'solid-primary',\n    size: 'regular',\n    shape: 'normal',\n  };\n\n  block.innerHTML = block.innerHTML.replace(btnPattern, (match, content) => {\n    const innerMatch = content.match(stylePattern) || [];\n    let props: any = [];\n    if (innerMatch[1]) {\n      props = innerMatch[1].split(';');\n      btnProps.style = `${props[2] || 'solid'}-${props[0] || 'primary'}`;\n      btnProps.size = props[1] || 'regular';\n      btnProps.shape = props[3] || 'normal';\n    }\n    const manipulatedContent = content.trim();\n    const tempEl = createElement('div');\n    tempEl.innerHTML = manipulatedContent;\n    const clonedEl = $(tempEl, 'a')?.cloneNode(true) as HTMLElement;\n    if (clonedEl) {\n      const foundTextNode = Array.from(clonedEl.childNodes).find((node) => node.nodeType === 3);\n      clonedEl.className = `btn btn-${btnProps.style}`;\n      if (btnProps.size === 'small') {\n        clonedEl.classList.add('btn-sm');\n      }\n      if (btnProps.size === 'large') {\n        clonedEl.classList.add('btn-lg');\n      }\n      if (btnProps.size === 'xlarge') {\n        clonedEl.classList.add('btn-xl');\n      }\n      if (btnProps.size !== 'normal') {\n        clonedEl.classList.add(`btn-${btnProps.shape}`);\n      }\n      if (foundTextNode) {\n        foundTextNode.textContent = foundTextNode.textContent.trim();\n        const spanEl = createElement('span');\n        foundTextNode.parentNode.insertBefore(spanEl, foundTextNode);\n        spanEl.append(foundTextNode);\n      } else {\n        clonedEl.classList.add('btn-icon-only');\n      }\n      return clonedEl.outerHTML;\n    }\n  });\n};\n\nconst decorateDisplayTexts = (block: HTMLElement) => {\n  const pEls = $$(block, 'p, h1, h2, h3, h4, h5, h6');\n  const d1pattern = /\\[--display1--\\](.*?)\\[\\/--display1--\\]/gs;\n  const d2pattern = /\\[--display2--\\](.*?)\\[\\/--display2--\\]/gs;\n  const d3pattern = /\\[--display3--\\](.*?)\\[\\/--display3--\\]/gs;\n  const d4pattern = /\\[--display4--\\](.*?)\\[\\/--display4--\\]/gs;\n  pEls.forEach((pEl) => {\n    pEl.innerHTML = pEl.innerHTML.replace(d1pattern, (ignore, content) => {\n      pEl.classList.add('display-1');\n      return content;\n    });\n    pEl.innerHTML = pEl.innerHTML.replace(d2pattern, (ignore, content) => {\n      pEl.classList.add('display-2');\n      return content;\n    });\n    pEl.innerHTML = pEl.innerHTML.replace(d3pattern, (ignore, content) => {\n      pEl.classList.add('display-3');\n      return content;\n    });\n    pEl.innerHTML = pEl.innerHTML.replace(d4pattern, (ignore, content) => {\n      pEl.classList.add('display-4');\n      return content;\n    });\n  });\n};\n\nconst decorateIntroAndSmallParagraphs = (block: HTMLElement) => {\n  const pEls = $$(block, 'p');\n  const pattern = /\\[--intro--\\](.*?)\\[\\/--intro--\\]/gs;\n  pEls.forEach((pEl) => {\n    pEl.innerHTML = pEl.innerHTML.replace(pattern, (ignore, content) => {\n      addClass(pEl, 'intro');\n      return content;\n    });\n  });\n  const patternSmall = /\\[--small--\\](.*?)\\[\\/--small--\\]/gs;\n  pEls.forEach((pEl) => {\n    pEl.innerHTML = pEl.innerHTML.replace(patternSmall, (ignore, content) => {\n      const smallEl = createElement('small');\n      smallEl.innerHTML = content;\n      return smallEl.outerHTML;\n    });\n  });\n};\n\nconst decorateSectionTitle = (block: HTMLElement) => {\n  const pEls = $$(block, 'h1, h2, h3, h4, h5, h6');\n  const pattern = /\\[--section-title--\\](.*?)\\[\\/--section-title--\\]/gs;\n  pEls.forEach((pEl) => {\n    pEl.innerHTML = pEl.innerHTML.replace(pattern, (ignore, content) => {\n      addClass(pEl, 'section-title');\n      // const divEl = createElement('div');\n      // divEl.innerHTML = content;\n      // pEl.id = content;\n      // return divEl.outerHTML;\n      return content;\n    });\n  });\n};\n\nconst decoratorInit = (block: HTMLElement) => {\n  decorateButtons(block);\n  decorateDisplayTexts(block);\n  decorateIntroAndSmallParagraphs(block);\n  decorateSectionTitle(block);\n};\n\nexport {\n  decoratorInit,\n  decorateButtons,\n  decorateDisplayTexts,\n  decorateIntroAndSmallParagraphs,\n  decorateSectionTitle,\n};\n"]}