{"version":3,"sources":["carousel/styles/_default.scss","home/runner/work/eds-c/eds-c/eds-c/src/styles/config/_mixins.scss","carousel/styles/_md.scss"],"names":[],"mappings":"AAKA;EACE;;AAEE;EACE;EACA;EACA;EACA;EACA;EACA;;AACA;EACE;;AAEF;ECAJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;ADHE;EACE;;AAEF;EACE;;AACA;EACE;;AAEF;AAAA;EAEE;EACA;;AACA;AAAA;EACE;;;AAQR;EACE;;;ACwEF;EC3GM;IDyKN;ICvKQ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EAEF;IACE;;EAEF;IACE;;EAUA;IDgJR","sourcesContent":["@use './../../../styles/imports' as *;\n@use 'sass:map';\n\n$this-block: 'carousel';\n\n.#{$this-block}-section {\n  background-color: map.get($grays, 'gray-0');\n  &.carousel-image {\n    .swiper-slide {\n      height: 0;\n      opacity: 0.25;\n      overflow: hidden;\n      padding-bottom: 56.25%;\n      position: relative;\n      transition: all 0.25s linear;\n      &.swiper-slide-active {\n        opacity: 1;\n      }\n      img {\n        @include center-center;\n      }\n    }\n    .autoplay-progress {\n      display: none;\n    }\n    .swiper-controls {\n      gap: map.get($gap-sizes, 4);\n      .swiper-pagination-fraction {\n        width: auto;\n      }\n      .swiper-button-prev,\n      .swiper-button-next {\n        height: auto;\n        width: auto;\n        &::after {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n.dark-mode {\n  .#{$this-block}-section {\n    background-color: map.get($grays, 'gray-10');\n  }\n}\n","@use './variables' as *;\n@use './functions' as *;\n@use 'sass:math';\n@use 'sass:map';\n\n@mixin center-left {\n  height: 101%;\n  left: 0; // Aligns to the left edge\n  object-fit: cover;\n  object-position: left;\n  position: absolute;\n  top: 50%; // Vertically centers\n  transform: translateY(-50%); // Adjusts for vertical centering\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin center-center {\n  height: 101%;\n  left: 50%;\n  object-fit: cover;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin center-right {\n  height: 101%;\n  object-fit: cover;\n  object-position: right;\n  position: absolute;\n  right: 0; // Aligns to the right edge\n  top: 50%; // Vertically centers\n  transform: translateY(-50%); // Adjusts for vertical centering\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin top-left {\n  height: 101%;\n  left: 0; // Aligns to the left edge\n  object-fit: cover;\n  object-position: left;\n  position: absolute;\n  top: 0; // Aligns to the top edge\n  transform: none; // No transformation needed\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin top-center {\n  height: 101%;\n  left: 50%; // Horizontally centers\n  object-fit: cover;\n  position: absolute;\n  top: 0; // Aligns to the top edge\n  transform: translateX(-50%); // Adjusts for horizontal centering\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin top-right {\n  height: 101%;\n  right: 0; // Aligns to the right edge\n  object-fit: cover;\n  object-position: right;\n  position: absolute;\n  top: 0; // Aligns to the top edge\n  transform: none; // No transformation needed\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin bottom-left {\n  height: 101%;\n  bottom: 0; // Aligns to the bottom edge\n  left: 0; // Aligns to the left edge\n  object-fit: cover;\n  object-position: left;\n  position: absolute;\n  transform: none; // No transformation needed\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin bottom-center {\n  height: 101%;\n  bottom: 0; // Aligns to the bottom edge\n  left: 50%; // Horizontally centers\n  object-fit: cover;\n  position: absolute;\n  transform: translateX(-50%); // Adjusts for horizontal centering\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin bottom-right {\n  height: 101%;\n  bottom: 0; // Aligns to the bottom edge\n  right: 0; // Aligns to the right edge\n  object-fit: cover;\n  object-position: right;\n  position: absolute;\n  transform: none; // No transformation needed\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin bpsm {\n  @media #{map.get($mq, 'sm')} {\n    @content;\n  }\n}\n@mixin bpmd {\n  @media #{map.get($mq, 'md')} {\n    @content;\n  }\n}\n@mixin bplg {\n  @media #{map.get($mq, 'lg')} {\n    @content;\n  }\n}\n@mixin bpxl {\n  @media #{map.get($mq, 'xl')} {\n    @content;\n  }\n}\n@mixin bpxxl {\n  @media #{map.get($mq, 'xxl')} {\n    @content;\n  }\n}\n\n@mixin containerize {\n  margin: 0 auto;\n  padding: 0 map.get($gap-sizes, 3);\n  width: 100%;\n  @include bpxl {\n    padding: 0 map.get($gap-sizes, 7);\n  }\n  @include bpxxl {\n    padding: 0 map.get($gap-sizes, 9);\n  }\n}\n\n@mixin noto-sans {\n  font-family: 'Noto Sans', sans-serif;\n  font-optical-sizing: auto;\n}\n@mixin noto-serif {\n  font-family: 'Noto Serif', serif;\n  font-optical-sizing: auto;\n}\n@mixin noto-mono {\n  font-family: 'Noto Serif Mono', monospace;\n  font-optical-sizing: auto;\n}\n\n@mixin button-variant(\n  $backgroundColor,\n  $borderColor,\n  $textColor,\n  $hoverBackgroundColor,\n  $hoverTextColor\n) {\n  background-color: $backgroundColor;\n  border-color: $borderColor;\n  color: $textColor;\n  &:hover {\n    background-color: $hoverBackgroundColor;\n    color: $hoverTextColor;\n  }\n}\n\n@mixin make-it-translucent($property, $color) {\n  #{$property}: rgba($color, $transparent-val);\n}\n\n@mixin display1 {\n  @include noto-serif;\n  font-weight: 300;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'display1'),\n    map.get($font-sizes-max, 'display1'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n@mixin display2 {\n  @include noto-serif;\n  font-weight: 300;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'display2'),\n    map.get($font-sizes-max, 'display2'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n@mixin display3 {\n  @include noto-serif;\n  font-weight: 300;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'display3'),\n    map.get($font-sizes-max, 'display3'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n@mixin display4 {\n  @include noto-serif;\n  font-weight: 300;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'display4'),\n    map.get($font-sizes-max, 'display4'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h1 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h1'),\n    map.get($font-sizes-max, 'h1'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h2 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h2'),\n    map.get($font-sizes-max, 'h2'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h3 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h3'),\n    map.get($font-sizes-max, 'h3'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h4 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h4'),\n    map.get($font-sizes-max, 'h4'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h5 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h5'),\n    map.get($font-sizes-max, 'h5'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h6 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h6'),\n    map.get($font-sizes-max, 'h6'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin para {\n  @include noto-sans;\n  font-size: map.get($font-sizes-min, 'p');\n  @include bpxl {\n    font-size: map.get($font-sizes-max, 'p');\n  }\n}\n\n@mixin para2 {\n  margin: 1em 0;\n  &.intro {\n    font-size: fluid-size(\n      map.get($font-sizes-min, 'intro'),\n      map.get($font-sizes-max, 'intro'),\n      $font-sizes-display-min,\n      $font-sizes-display-max\n    );\n  }\n}\n\n@mixin label {\n  @include noto-serif;\n  font-size: map.get($font-sizes-min, 'p');\n  @include bpxl {\n    font-size: map.get($font-sizes-max, 'p');\n  }\n}\n\n@mixin small {\n  @include noto-sans;\n  line-height: 1.5;\n  font-size: map.get($font-sizes-min, 'small');\n  @include bpxl {\n    font-size: map.get($font-sizes-max, 'small');\n  }\n}\n\n@mixin inputs {\n  @include noto-sans;\n  line-height: 1.25;\n  font-size: map.get($font-sizes-min, 'p');\n  @include bpxl {\n    font-size: map.get($font-sizes-max, 'p');\n  }\n}\n\n@mixin mono {\n  @include noto-mono;\n  font-size: inherit;\n}\n","@use './../../../styles/imports' as *;\n@use 'sass:map';\n\n$this-block: 'carousel';\n\n@include bpmd {\n  .#{$this-block}-section {\n    &.carousel-image {\n      .swiper-controls {\n        .swiper-pagination-fraction {\n          @include make-it-translucent('background-color', map.get($grays, 'gray-0'));\n          bottom: 0;\n          left: 50%;\n          width: map.get($gap-sizes, 11);\n          height: map.get($gap-sizes, 8);\n          border-radius: map.get($gap-sizes, 8) map.get($gap-sizes, 8) 0 0;\n          transform: translate(-50%, 0);\n          padding-top: map.get($gap-sizes, 3);\n          font-weight: 700;\n        }\n        .swiper-button-prev {\n          left: calc(-1 * map.get($gap-sizes, 9));\n        }\n        .swiper-button-next {\n          right: calc(-1 * map.get($gap-sizes, 9));\n        }\n      }\n    }\n  }\n\n  .dark-mode {\n    .#{$this-block}-section {\n      &.carousel-image {\n        .swiper-controls {\n          .swiper-pagination-fraction {\n            @include make-it-translucent('background-color', map.get($grays, 'gray-10'));\n          }\n        }\n      }\n    }\n  }\n}\n"],"file":"carousel.css"}