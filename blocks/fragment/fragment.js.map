{"version":3,"sources":["blocks/fragment/fragment.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAEjD;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,IAAI;IACrC,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;QACjC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,IAAI,aAAa,CAAC,CAAC;QAC/C,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;YACZ,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;YAEnC,6CAA6C;YAC7C,MAAM,kBAAkB,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;gBACvC,IAAI,CAAC,gBAAgB,CAAC,GAAG,GAAG,IAAI,IAAI,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;oBACpE,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EACvB,IAAI,GAAG,CAAC,IAAI,EAAG,MAAc,CAAC,QAAQ,CAAC,CACxC,CAAC,IAAI,CAAC;gBACT,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;YACF,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YACjC,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAEvC,YAAY,CAAC,IAAI,CAAC,CAAC;YACnB,MAAM,YAAY,CAAC,IAAI,CAAC,CAAC;YACzB,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,QAAQ,CAAC,KAAK;IAC1C,MAAM,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACtC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IACzE,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,QAAQ,EAAE,CAAC;QACb,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QAClE,IAAI,eAAe,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC;YACtE,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;AACH,CAAC","file":"fragment.js","sourcesContent":["/*\n * Fragment Block\n * Include content on a page as a fragment.\n * https://www.aem.live/developer/block-collection/fragment\n */\n\nimport { decorateMain } from '../../scripts/scripts';\nimport { loadSections } from '../../scripts/aem';\n\n/**\n * Loads a fragment.\n * @param {string} path The path to the fragment\n * @returns {HTMLElement} The root element of the fragment\n */\nexport async function loadFragment(path) {\n  if (path && path.startsWith('/')) {\n    const resp = await fetch(`${path}.plain.html`);\n    if (resp.ok) {\n      const main = document.createElement('main');\n      main.innerHTML = await resp.text();\n\n      // reset base path for media to fragment base\n      const resetAttributeBase = (tag, attr) => {\n        main.querySelectorAll(`${tag}[${attr}^=\"./media_\"]`).forEach((elem) => {\n          elem[attr] = new URL(\n            elem.getAttribute(attr),\n            new URL(path, (window as any).location),\n          ).href;\n        });\n      };\n      resetAttributeBase('img', 'src');\n      resetAttributeBase('source', 'srcset');\n\n      decorateMain(main);\n      await loadSections(main);\n      return main;\n    }\n  }\n  return null;\n}\n\nexport default async function decorate(block) {\n  const link = block.querySelector('a');\n  const path = link ? link.getAttribute('href') : block.textContent.trim();\n  const fragment = await loadFragment(path);\n  if (fragment) {\n    const fragmentSection = fragment.querySelector(':scope .section');\n    if (fragmentSection) {\n      block.closest('.section').classList.add(...fragmentSection.classList);\n      block.closest('.fragment').replaceWith(...fragment.childNodes);\n    }\n  }\n}\n"]}