{"version":3,"sources":["header/styles/_default.scss","home/runner/work/eds-c/eds-c/eds-c/src/styles/config/_mixins.scss","header/styles/_xl.scss"],"names":[],"mappings":"AAKA;EACE;EACA;EACA;EACA;EACA;EACA;;AACA;EACE;;AAEF;EACE;EACA;;AAEF;EACE;EAEA;EACA;EACA;;AACA;EACE;;AAGJ;EACE;;AAEF;EACE;;AAEF;EC+IA;ED7IE;EACA;EACA;EACA;EACA;;AAEF;EACE;EACA;EACA;EACA;EACA;;AACA;EACE;EACA;EACA;;AAGJ;EACE;;AACA;EACE;EACA;EACA;;AAKF;EACE;EACA;;AAEF;EACE;;AAEF;AAAA;EAEE;;AAEF;EACE;;AAIF;EACE;;AAEF;EACE;;;AAMF;EACE;;AAGF;EACE;;AAEF;EACE;;AAGA;EACE;;AAEF;EACE;;;ACoBN;ECxHA;IACE;IACA;IAEA;IACA;IACA;;EAOA;IACE;;EAEF;IACE;IACA;;EAEF;IACE;IACA;;EAEF;IACE;;EAGJ;IACE;;EAGA;IACE;IACA;;EAIA;IACE;;EAGJ;IACE","sourcesContent":["@use './../../../styles/imports' as *;\n@use 'sass:map';\n\n$this-block: 'header';\n\n.#{$this-block} {\n  left: 0;\n  position: fixed;\n  top: 0;\n  transition: top 0.25s linear;\n  width: 100%;\n  z-index: 45;\n  &-hidden {\n    top: px-to-rem(-100px);\n  }\n  &-content {\n    background-color: var(--color-bg-semi-best);\n    position: relative;\n  }\n  &-logo {\n    border-left: map.get($gap-sizes, 1) solid\n      rgba(map.get(map.get($theme-colors, 'primary'), 'light'), 0.25);\n    height: map.get($gap-sizes, 8);\n    margin-left: calc(-1 * map.get($gap-sizes, 3));\n    padding: 0 map.get($gap-sizes, 5);\n    img {\n      height: 100%;\n    }\n  }\n  &-logo-light {\n    display: block;\n  }\n  &-logo-dark {\n    display: none;\n  }\n  &-nav {\n    @include make-it-translucent('background-color', map.get($grays, 'gray-0'));\n    height: calc(100% - #{map.get($gap-sizes, 8)} - #{map.get($gap-sizes, 1)});\n    left: 0;\n    position: fixed;\n    top: calc(map.get($gap-sizes, 8) + #{map.get($gap-sizes, 1)});\n    width: 100%;\n  }\n  &-nav-l0 {\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    > li > a {\n      display: block;\n      padding: map.get($gap-sizes, 5);\n      text-decoration: none;\n    }\n  }\n  &-more-wrapper {\n    height: map.get($gap-sizes, 8);\n    > button {\n      align-items: center;\n      display: flex;\n      justify-content: center;\n      // width: map.get($gap-sizes, 8);\n    }\n  }\n  &-content {\n    .amegmen-nav-cta button {\n      background-color: transparent;\n      width: map.get($gap-sizes, 8);\n    }\n    .amegmen-nav-wrapper {\n      background-color: var(--color-bg-semi-best);\n    }\n    .amegmen-ul-0 > li .amegmen-nav-item.amegmen-nav-item-active,\n    .amegmen-subnav {\n      background-color: var(--color-bg-gray-2);\n    }\n    .amegmen-ul-0 > li {\n      margin: 0;\n    }\n  }\n  #site_mode {\n    .icon-light-mode {\n      display: block;\n    }\n    .icon-dark-mode {\n      display: none;\n    }\n  }\n}\n.dark-mode {\n  .#{$this-block} {\n    &-logo {\n      border-left: map.get($gap-sizes, 1) solid\n        rgba(map.get(map.get($theme-colors, 'primary'), 'dark'), 0.25);\n    }\n    &-logo-light {\n      display: none;\n    }\n    &-logo-dark {\n      display: block;\n    }\n    #site_mode {\n      .icon-light-mode {\n        display: none;\n      }\n      .icon-dark-mode {\n        display: block;\n      }\n    }\n  }\n}\n","@use './variables' as *;\n@use './functions' as *;\n@use 'sass:math';\n@use 'sass:map';\n\n@mixin center-left {\n  height: 101%;\n  left: 0; // Aligns to the left edge\n  object-fit: cover;\n  object-position: left;\n  position: absolute;\n  top: 50%; // Vertically centers\n  transform: translateY(-50%); // Adjusts for vertical centering\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin center-center {\n  height: 101%;\n  left: 50%;\n  object-fit: cover;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin center-right {\n  height: 101%;\n  object-fit: cover;\n  object-position: right;\n  position: absolute;\n  right: 0; // Aligns to the right edge\n  top: 50%; // Vertically centers\n  transform: translateY(-50%); // Adjusts for vertical centering\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin top-left {\n  height: 101%;\n  left: 0; // Aligns to the left edge\n  object-fit: cover;\n  object-position: left;\n  position: absolute;\n  top: 0; // Aligns to the top edge\n  transform: none; // No transformation needed\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin top-center {\n  height: 101%;\n  left: 50%; // Horizontally centers\n  object-fit: cover;\n  position: absolute;\n  top: 0; // Aligns to the top edge\n  transform: translateX(-50%); // Adjusts for horizontal centering\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin top-right {\n  height: 101%;\n  right: 0; // Aligns to the right edge\n  object-fit: cover;\n  object-position: right;\n  position: absolute;\n  top: 0; // Aligns to the top edge\n  transform: none; // No transformation needed\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin bottom-left {\n  height: 101%;\n  bottom: 0; // Aligns to the bottom edge\n  left: 0; // Aligns to the left edge\n  object-fit: cover;\n  object-position: left;\n  position: absolute;\n  transform: none; // No transformation needed\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin bottom-center {\n  height: 101%;\n  bottom: 0; // Aligns to the bottom edge\n  left: 50%; // Horizontally centers\n  object-fit: cover;\n  position: absolute;\n  transform: translateX(-50%); // Adjusts for horizontal centering\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin bottom-right {\n  height: 101%;\n  bottom: 0; // Aligns to the bottom edge\n  right: 0; // Aligns to the right edge\n  object-fit: cover;\n  object-position: right;\n  position: absolute;\n  transform: none; // No transformation needed\n  vertical-align: top;\n  width: 101%;\n}\n\n@mixin bpsm {\n  @media #{map.get($mq, 'sm')} {\n    @content;\n  }\n}\n@mixin bpmd {\n  @media #{map.get($mq, 'md')} {\n    @content;\n  }\n}\n@mixin bplg {\n  @media #{map.get($mq, 'lg')} {\n    @content;\n  }\n}\n@mixin bpxl {\n  @media #{map.get($mq, 'xl')} {\n    @content;\n  }\n}\n@mixin bpxxl {\n  @media #{map.get($mq, 'xxl')} {\n    @content;\n  }\n}\n\n@mixin containerize {\n  margin: 0 auto;\n  padding: 0 map.get($gap-sizes, 3);\n  width: 100%;\n  @include bpxl {\n    padding: 0 map.get($gap-sizes, 7);\n  }\n  @include bpxxl {\n    padding: 0 map.get($gap-sizes, 9);\n  }\n}\n\n@mixin noto-sans {\n  font-family: 'Noto Sans', sans-serif;\n  font-optical-sizing: auto;\n}\n@mixin noto-serif {\n  font-family: 'Noto Serif', serif;\n  font-optical-sizing: auto;\n}\n@mixin noto-mono {\n  font-family: 'Noto Serif Mono', monospace;\n  font-optical-sizing: auto;\n}\n\n@mixin button-variant(\n  $backgroundColor,\n  $borderColor,\n  $textColor,\n  $hoverBackgroundColor,\n  $hoverTextColor\n) {\n  background-color: $backgroundColor;\n  border-color: $borderColor;\n  color: $textColor;\n  &:hover {\n    background-color: $hoverBackgroundColor;\n    color: $hoverTextColor;\n  }\n}\n\n@mixin make-it-translucent($property, $color) {\n  #{$property}: rgba($color, $transparent-val);\n}\n\n@mixin display1 {\n  @include noto-serif;\n  font-weight: 300;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'display1'),\n    map.get($font-sizes-max, 'display1'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n@mixin display2 {\n  @include noto-serif;\n  font-weight: 300;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'display2'),\n    map.get($font-sizes-max, 'display2'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n@mixin display3 {\n  @include noto-serif;\n  font-weight: 300;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'display3'),\n    map.get($font-sizes-max, 'display3'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n@mixin display4 {\n  @include noto-serif;\n  font-weight: 300;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'display4'),\n    map.get($font-sizes-max, 'display4'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h1 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h1'),\n    map.get($font-sizes-max, 'h1'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h2 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h2'),\n    map.get($font-sizes-max, 'h2'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h3 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h3'),\n    map.get($font-sizes-max, 'h3'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h4 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h4'),\n    map.get($font-sizes-max, 'h4'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h5 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h5'),\n    map.get($font-sizes-max, 'h5'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin h6 {\n  @include noto-serif;\n  font-size: fluid-size(\n    map.get($font-sizes-min, 'h6'),\n    map.get($font-sizes-max, 'h6'),\n    $font-sizes-display-min,\n    $font-sizes-display-max\n  );\n}\n\n@mixin para {\n  @include noto-sans;\n  font-size: map.get($font-sizes-min, 'p');\n  @include bpxl {\n    font-size: map.get($font-sizes-max, 'p');\n  }\n}\n\n@mixin para2 {\n  margin: 1em 0;\n  &.intro {\n    font-size: fluid-size(\n      map.get($font-sizes-min, 'intro'),\n      map.get($font-sizes-max, 'intro'),\n      $font-sizes-display-min,\n      $font-sizes-display-max\n    );\n  }\n}\n\n@mixin label {\n  @include noto-serif;\n  font-size: map.get($font-sizes-min, 'p');\n  @include bpxl {\n    font-size: map.get($font-sizes-max, 'p');\n  }\n}\n\n@mixin small {\n  @include noto-sans;\n  line-height: 1.5;\n  font-size: map.get($font-sizes-min, 'small');\n  @include bpxl {\n    font-size: map.get($font-sizes-max, 'small');\n  }\n}\n\n@mixin inputs {\n  @include noto-sans;\n  line-height: 1.25;\n  font-size: map.get($font-sizes-min, 'p');\n  @include bpxl {\n    font-size: map.get($font-sizes-max, 'p');\n  }\n}\n\n@mixin mono {\n  @include noto-mono;\n  font-size: inherit;\n}\n","@use './../../../styles/imports' as *;\n@use 'sass:map';\n\n$this-block: 'header';\n\n@include bpxl {\n  .#{$this-block}-logo {\n    border-left: 0;\n    border-right: map.get($gap-sizes, 1) solid\n      rgba(map.get(map.get($theme-colors, 'primary'), 'light'), 0.25);\n    height: map.get($gap-sizes, 10);\n    margin-left: calc(-1 * map.get($gap-sizes, 7));\n    padding: 0 map.get($gap-sizes, 7);\n    // &::after {\n    //   border-width: map.get($gap-sizes, 10) 0 0 map.get($gap-sizes, 6);\n    //   right: calc(-1 * map.get($gap-sizes, 6));\n    // }\n  }\n  .#{$this-block}-content {\n    .amegmen nav {\n      padding: 0;\n    }\n    .amegmen-ul-0 > li .amegmen-nav-item {\n      padding: px-to-rem(26px);\n      font-size: inherit;\n    }\n    .amegmen-wrapper {\n      display: inline-flex;\n      position: static;\n    }\n    .amegmen-nav-wrapper {\n      background-color: transparent;\n    }\n  }\n  .#{$this-block}-more-wrapper {\n    height: map.get($gap-sizes, 10);\n  }\n  .dark-mode {\n    .#{$this-block}-logo {\n      border-left: 0;\n      border-right: map.get($gap-sizes, 1) solid\n        rgba(map.get(map.get($theme-colors, 'primary'), 'dark'), 0.25);\n    }\n    .#{$this-block}-content {\n      .amegmen-nav-wrapper {\n        background-color: transparent;\n      }\n    }\n    .#{$this-block}-nav {\n      background-color: transparent;\n    }\n  }\n}\n"],"file":"header.css"}